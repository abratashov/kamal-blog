# Name of your application. Used to uniquely configure containers.
service: kamal-blog

# Name of the container image.
image: abratashov/kamal-blog

# Deploy to these servers.
# servers:
#   - 31.42.190.196

servers:
  web:
    hosts:
      - 31.42.190.196
    labels:
      traefik.http.routers.kamal_blog.rule: Host(`vpsku6hi.netxi.host`)
      traefik.http.routers.kamal_blog_secure.entrypoints: websecure
      traefik.http.routers.kamal_blog_secure.rule: Host(`vpsku6hi.netxi.host`)
      traefik.http.routers.kamal_blog_secure.tls: true
      traefik.http.routers.kamal_blog_secure.tls.certresolver: letsencrypt

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  server: ghcr.io
  username: abratashov

  # Always use an access token rather than real password when possible.
  password:
    - DOCKER_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    DB_HOST: 31.42.190.196
  secret:
    - RAILS_MASTER_KEY
    - DATABASE_PASSWORD

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:15
    host: 31.42.190.196
    port: 5432
    env:
      clear:
        POSTGRES_USER: 'root'
      secret:
        - DATABASE_PASSWORD
    files:
      - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data:/var/lib/postgresql/data

traefik:
  options:
    publish:
      - "443:443"
    volume:
      - "/letsencrypt/acme.json:/letsencrypt/acme.json"
  args:
    entryPoints.web.address: ":80"
    entryPoints.websecure.address: ":443"
    entryPoints.web.http.redirections.entryPoint.to: websecure
    entryPoints.web.http.redirections.entryPoint.scheme: https
    entryPoints.web.http.redirections.entrypoint.permanent: true
    certificatesResolvers.letsencrypt.acme.email: "na.site.iteam@gmail.com"
    certificatesResolvers.letsencrypt.acme.storage: "/letsencrypt/acme.json"
    certificatesResolvers.letsencrypt.acme.httpchallenge: true
    certificatesResolvers.letsencrypt.acme.httpchallenge.entrypoint: web
